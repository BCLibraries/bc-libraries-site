{"version":3,"sources":["FixBrokenImage.jsx","slots/PrimoRecordLink.js","slots/video/OnlineVideo.jsx","slots/availability/NotAvailableMessage.js","slots/availability/CheckHoldingsMessage.jsx","slots/availability/Availability.jsx","slots/availability/AvailabilityContainer.jsx","slots/video/PhysicalVideo.jsx","slots/video/VideoResult.jsx","slots/books/BookResult.jsx","slots/SeeAllLink.jsx","slots/ResultsBox.js","slots/LoadingBox.js","slots/ErrorBox.js","slots/NoResultsBox.js","slots/ResultList.js","slots/ResultsBoxContainer.jsx","slots/cleanGraphQLInput.js","slots/books/BooksAndMoreQuery.js","slots/books/BookResults.jsx","slots/articles/ArticleResult.jsx","slots/articles/ArticlesQuery.js","slots/articles/ArticleResults.jsx","slots/faq/FaqResult.jsx","slots/faq/FAQQuery.js","slots/faq/FaqResults.jsx","slots/librarians/LibrarianResult.jsx","slots/librarians/LibrariansQuery.js","slots/librarians/LibrarianResults.jsx","slots/video/VideosQuery.js","slots/video/VideoResults.jsx","slots/website/WebsiteResult.jsx","slots/website/WebsiteQuery.js","slots/website/WebsiteResults.jsx","slots/bestbets/BestBetResult.js","slots/bestbets/BestBetLookup.js","SkipToLink.jsx","SkipToLinkBar.jsx","SearchResults.jsx","slots/BlankSearchScreen.jsx","App.jsx","searchbox/SearchBox.jsx","searchbox/SearchBoxContainer.jsx","AppContainer.jsx","serviceWorker.js","index.js"],"names":["FixBrokenImage","fallbackImage","imgClass","event","target","onerror","src","className","PrimoRecordLink","item","concat","id","blankScreen","OnlineVideo","_ref","video","screen","screenCap","screenClass","watchLink","mms","recordLink","react_default","a","createElement","href","alt","title","onError","date","creator","contributors","creatorName","NotAvailableMessage","checkHoldingsMessage","Availability","firstHolding","inOtherLibraries","link","libraryDisplay","location","callNumber","locationValues","ONL","weight","Stacks","1st Floor Microfilm","TML","BAPST","BURNS","ERC","SWK","LAW","GEO","RES_SHARE","DEV","INT","getLocationScore","libraryCode","library","sortLibraries","holdingA","holdingB","locationCode","AvailabilityContainer","holdings","holding","availableItems","allItems","i","length","items","filter","availability","Array","prototype","push","apply","sort","buildHoldings","availabilityStatus","CheckHoldingsMessage","availability_Availability","availability_NotAvailableMessage","defaultDVDIcon","dvdClass","defaultIcon","iconClass","coverClass","coverImages","onImageLoad","naturalHeight","PhysicalVideo","format","includes","cover","String","url","getCover","altText","aria-hidden","onLoad","availability_AvailabilityContainer","VideoResult","inCatalogResult","isElectronic","video_OnlineVideo","video_PhysicalVideo","resultClass","BookResult","type","video_VideoResult","publisher","getItLink","isPhysical","physicalAvailability","coverImage","SeeAllLink","total","found","term","toLocaleString","ResultsBox","heading","seeAll","searchUrl","children","aria-live","LoadingBox","slots_ResultsBox","ErrorBox","NoResultsBox","ResultList","docs","classPrefix","renderResult","map","ResultsBoxContainer","client","query","_useQuery","useQuery","gql","loading","error","data","slots_LoadingBox","slots_ErrorBox","object","slots_NoResultsBox","results","slots_SeeAllLink","slots_ResultList","cleanGraphQLInput","string","replace","BooksAndMoreQuery","searchString","Object","classCallCheck","this","_templateObject","forBooksAndMore","BookResults","slots_ResultsBoxContainer","doc","books_BookResult","key","ArticleResult","article","part_of","journal_title","parts","split","formatPartOf","isPartOf","journalTitle","ArticlesQuery","ArticlesQuery_templateObject","forArticles","ArticleResults","articles_ArticleResult","FaqResult","result","question","FAQQuery","FAQQuery_templateObject","forFAQ","FaqResults","faq_FaqResult","LibrarianResult","librarian","img_url","image","name","display_subjects","subjects","join","LibrariansQuery","LibrariansQuery_templateObject","forLibrarians","LibrarianResults","librarians_LibrarianResult","VideosQuery","VideosQuery_templateObject","forVideos","VideoResults","getHighlight","hit","__html","highlight","WebsiteResult","guideUrl","guideTitle","dangerouslySetInnerHTML","WebsiteQuery","WebsiteQuery_templateObject","forWebsite","WebsiteResults","website_WebsiteResult","BestBetResult","bestBet","displayText","BestBetLookup","BestBetLookup_templateObject","forBestBets","bestbets_BestBetResult","SkipToLink","label","onClick","current","scrollIntoView","behavior","block","SkipToLinkBar","booksDiv","articlesDiv","faqDiv","librariansDiv","videoDiv","websiteDiv","src_SkipToLink","ApolloClient","uri","process","SearchResults","refList","useRef","resultBoxParams","bestbets_BestBetLookup","ref","books_BookResults","articles_ArticleResults","faq_FaqResults","librarians_LibrarianResults","video_VideoResults","website_WebsiteResults","BlankSearchScreen","App","searchBox","src_SearchResults","slots_BlankSearchScreen","SearchBox","searchBoxId","suggestions","fetchSuggestions","clearSuggestions","onSuggestionSelected","inputProps","method","action","htmlFor","dist_default","onSuggestionsFetchRequested","onSuggestionsClearRequested","renderSuggestion","suggestion","value","minTypeaheadLength","suggestionValue","suggestionIndex","sectionIndex","window","protocol","host","pathname","SearchBoxContainer","_ref2","handleTyping","onSubmit","_useState","useState","_useState2","slicedToArray","setSuggestions","_useState3","_useState4","setValue","_fetchSuggestions","asyncToGenerator","regenerator_default","mark","_callee","_ref4","reason","json","response","wrap","_context","prev","next","abrupt","fetch","sent","t0","stop","arguments","props","_x","placeholder","onChange","_ref3","newValue","autoFocus","searchbox_SearchBox","setPageTitle","document","AppContainer","initialSearchString","RegExp","exec","search","decodeURIComponent","getUrlParameter","setSearchString","inputText","setInputText","searchbox_SearchBoxContainer","handleSubmit","src_App","Boolean","hostname","match","ReactDOM","render","src_AppContainer","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76b5046f.chunk.js","sourcesContent":["function FixBrokenImage(fallbackImage, imgClass) {\n    return function (event) {\n        event.target.onerror = null;\n        event.target.src = fallbackImage;\n        if (imgClass) {\n            event.target.className = imgClass;\n        }\n    }\n}\n\nexport default FixBrokenImage;","/**\n * Return a link to a record in Primo\n *\n * @param item\n * @return {string}\n * @constructor\n */\nfunction PrimoRecordLink(item) {\n    return `https://bc-primo.hosted.exlibrisgroup.com/primo-explore/fulldisplay?docid=${item.id}&context=L&tab=bcl_only&search_scope=bcl&vid=bclib_new&lang=en_US`;\n}\n\nexport {PrimoRecordLink};","import React from 'react';\nimport FixBrokenImage from \"../../FixBrokenImage\";\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\n\nconst blankScreen = 'https://library.bc.edu/images/blank-screen.svg';\n\nfunction OnlineVideo({video}) {\n    const screen = video.screenCap ? video.screenCap : blankScreen;\n    const screenClass = video.screenCap ? 'online-video-thumb__screenshot' : 'online-video-thumb__blank_screen';\n    const watchLink = `https://mlib.bc.edu/reserves-api/items/${video.mms}`;\n    const recordLink = PrimoRecordLink(video);\n\n    return <div className=\"online-video\">\n        <a href={watchLink}>\n            <div className=\"online_video__thumb\">\n                <img src={screen} alt={`Watch ${video.title} online`} onError={FixBrokenImage(blankScreen)} className={screenClass}/>\n            </div>\n        </a>\n\n        <h3 className=\"online-video__media-heading media-heading\">\n            <a href={recordLink} className=\"online-video__title\">{video.title}</a>\n        </h3>\n\n        {video.date}\n\n        <div className=\"online-video__creator\">{creatorName(video)}</div>\n\n        <div className=\"online-video__watch-link\"><a href={watchLink}>Watch online</a></div>\n    </div>\n}\n\nfunction creatorName(video) {\n    if (video.creator) {\n        return video.creator;\n    }\n\n    if (video.contributors[0]) {\n        return video.contributors[0];\n    }\n\n    return '';\n}\n\nexport default OnlineVideo;","import {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport React from \"react\";\n\n/**\n * Message to display when the item is not available\n *\n * @param item\n * @return {*}\n * @constructor\n */\nfunction NotAvailableMessage({item}) {\n    return (\n        <div>\n            Not available. <a href={PrimoRecordLink(item)}>Check for more options</a>.\n        </div>\n    )\n}\n\nexport default NotAvailableMessage;\n","import {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport React from \"react\";\n\nfunction checkHoldingsMessage({item}) {\n    return (\n        <div>\n            <a href={PrimoRecordLink(item)}>Check \"Find in Library\"</a>.\n        </div>\n    );\n}\n\nexport default checkHoldingsMessage;","import React from \"react\";\n\n/**\n * Message to display for available item\n *\n * @param firstHolding\n * @param inOtherLibraries\n * @return {*}\n * @constructor\n */\nfunction Availability({firstHolding, inOtherLibraries}) {\n    return (\n        <ul className='available-items-list'>\n            <li className={`item-info item-info--available`}>\n                <a href={firstHolding.link}>\n                    <span className=\"item-info__library\">Find in {firstHolding.libraryDisplay}</span>\n                    <span className=\"item-info__location\">{firstHolding.location}</span>\n                    <span className=\"item-info__callno\">({firstHolding.callNumber})</span>\n                    <span className=\"item-info__other-libraries\">{inOtherLibraries && ' and other libraries'}</span>\n                </a>\n            </li>\n        </ul>\n    );\n\n}\n\nexport default Availability;","import React from 'react';\nimport NotAvailableMessage from \"./NotAvailableMessage\";\nimport CheckHoldingsMessage from \"./CheckHoldingsMessage\";\nimport Availability from \"./Availability\";\n\n/**\n * Display an item's available holdings\n *\n * @param item\n * @return {*}\n * @constructor\n */\nfunction AvailabilityContainer({item}) {\n\n    // Build holdings list and display first holding.\n    const holdings = buildHoldings(item);\n    const firstHolding = holdings.length > 0 ? holdings[0] : null;\n\n    if (item.holdings[0].availabilityStatus === 'check_holdings') {\n        return <CheckHoldingsMessage item={item} />\n    } else if (firstHolding) {\n        return <Availability firstHolding={firstHolding} inOtherLibraries={holdings.length > 1}/>;\n    } else {\n        return <NotAvailableMessage item={item}/>;\n    }\n}\n\n/**\n * Stores library and location weights for sorting holdings.\n *\n * Entries are formatted like:\n *\n *     'library code': {\n *         weight: 0,\n *         'location 1 display': -1,\n *         'location 2 display': 2\n *     }\n *\n *  Where:\n *\n *     * library code: The three-letter library code used in Alma (e.g. 'ONL', 'ERC')\n *     * weight: How much to weight the library if no location match is found\n *     * location # display: The display string value for a location (e.g. '2 hour reserves'); the value\n *                           is the weighting for items in this location\n *\n *  Items with lower weights will sort higher, so to emphasize a library or location give it a negative\n *  value.\n */\nconst locationValues = {\n    'ONL': {\n        weight: -1,\n        'Stacks': -3,\n        '1st Floor Microfilm': 1\n    },\n    'TML': {\n        weight: 0\n    },\n    'BAPST': {\n        weight: 0\n    },\n    'BURNS': {\n        weight: 0\n    },\n    'ERC': {\n        weight: 0\n    },\n    'SWK': {\n        weight: 0\n    },\n    'LAW': {\n        weight: 0\n    },\n    'GEO': {\n        weight: 1\n    },\n    'RES_SHARE': {\n        weight: 2\n    },\n    'DEV': {\n        weight: 2\n    },\n    'INT': {\n        weight: 1\n    }\n};\n\n/**\n * Lookup desirability score by library and location\n */\nfunction getLocationScore(libraryCode, location) {\n    const library = locationValues[libraryCode];\n    return library[location] ? library[location] + library.weight : library.weight;\n}\n\n/**\n * Rank two holdings by most desirable library and location\n */\nfunction sortLibraries(holdingA, holdingB) {\n    return getLocationScore(holdingA.library, holdingA.locationCode) - getLocationScore(holdingB.library, holdingB.locationCode)\n}\n\n/**\n * Build a list of available holdings sorted by most desirable library and location\n */\nfunction buildHoldings(item) {\n    const allItems = [];\n    let holding, availableItems;\n\n    for (let i = 0; i < item.holdings.length; i++) {\n        holding = item.holdings[i];\n        availableItems = holding.items.filter(item => item.availability === 'available');\n        Array.prototype.push.apply(allItems, availableItems);\n    }\n\n    return allItems.sort(sortLibraries);\n}\n\nexport default AvailabilityContainer;","import React from 'react';\nimport FixBrokenImage from \"../../FixBrokenImage\";\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport AvailabilityContainer from \"../availability/AvailabilityContainer\";\n\nconst defaultVHSIcon = 'https://library.bc.edu/images/video-tape.svg';\nconst defaultDVDIcon = 'https://library.bc.edu/images/mono-dvd-mount.svg';\n\nconst vhsClass = 'physical-video__vhs-cover',\n    dvdClass = 'physical-video__dvd-cover';\n\nlet defaultIcon = defaultVHSIcon;\nlet iconClass = vhsClass;\n\nfunction PhysicalVideo({video}) {\n    if (video.format.includes('disc')) {\n        defaultIcon = defaultDVDIcon;\n        iconClass = dvdClass;\n    }\n\n    const cover = getCover(video);\n\n    const altText = `Catalog record for ${video.title}`;\n\n    const recordLink = PrimoRecordLink(video);\n\n    return <div className=\"physical-video\">\n        <a href={recordLink} aria-hidden=\"true\">\n            <img src={cover}\n                 onLoad={onImageLoad}\n                 onError={FixBrokenImage(defaultIcon, `OPER physical-video__default_cover ${iconClass}`)}\n                 alt={altText}\n                 className={coverClass(video)}/>\n        </a>\n\n        <h3 className=\"physical-video__media-heading media-heading\">\n            <a href={recordLink} className=\"physical-video__title\">\n                {video.title}\n            </a>\n        </h3>\n\n        {video.date}\n\n        <div className=\"physical-video__creator\">{creatorName(video)}</div>\n\n        {video.format}\n\n        <AvailabilityContainer item={video}/>\n\n    </div>\n}\n\nfunction coverClass(video) {\n    return (video.coverImages.length > 0 && video.coverImages[0]) ? 'physical-video__box_cover' : `OPER HERE NOW physical-video__default_cover  ${iconClass}`;\n}\n\nfunction getCover(video) {\n    if (video.coverImages.length > 0 && video.coverImages[0]) {\n        return String(video.coverImages[0].url);\n    }\n\n    return defaultIcon;\n}\n\nfunction creatorName(video) {\n    if (video.creator) {\n        return video.creator;\n    }\n\n    if (video.contributors[0]) {\n        return video.contributors[0];\n    }\n\n    return '';\n}\n\nfunction onImageLoad(event) {\n    if (event.target.naturalHeight === 1) {\n        event.target.className = `physical-video__default_cover ${iconClass}`;\n        event.target.src = defaultIcon;\n    }\n}\n\nexport default PhysicalVideo;","import React from 'react';\nimport OnlineVideo from './OnlineVideo';\nimport PhysicalVideo from './PhysicalVideo';\n\nfunction VideoResult({item, inCatalogResult}) {\n    const video = item.isElectronic ? <OnlineVideo video={item}/> : <PhysicalVideo video={item}/>;\n    const resultClass = inCatalogResult ? 'catalog-result-item' : 'catalog-result-item col-md-4';\n\n    return <li className={resultClass}>\n        {video}\n    </li>\n}\n\nexport default VideoResult;","import React from 'react';\nimport VideoResult from \"../video/VideoResult\";\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport AvailabilityContainer from \"../availability/AvailabilityContainer\";\n\nfunction BookResult({item}) {\n    if (item.isElectronic && item.type === 'Video') {\n        return <VideoResult item={item} inCatalogResult={true}/>;\n    }\n\n    const link = PrimoRecordLink(item);\n\n    return <li className=\"catalog-result-item media\">\n\n        <div className=\"media-body\">\n            <h3 className=\"catalog-result-item__media-heading media-heading\">\n                <a href={link} className=\"catalog-result-item__title\">\n                    {item.title}\n                </a>\n            </h3>\n\n            <div className=\"catalog-result-item__creator\">{creatorName(item)}</div>\n\n            <div className=\"catalog-result-item__publisher\">\n                {item.publisher} {item.date}\n            </div>\n\n            <div className=\"catalog-result-item__type\">{item.type}</div>\n\n            {item.isElectronic && getItLink(item)}\n\n            {item.isPhysical && physicalAvailability(item)}\n\n        </div>\n\n        {item.coverImages.length > 1 && coverImage(item)}\n    </li>\n}\n\nfunction creatorName(item) {\n    if (item.creator) {\n        return item.creator;\n    }\n\n    if (item.contributors[0]) {\n        return item.contributors[0];\n    }\n\n    return '';\n}\n\nfunction getItLink(item) {\n    return <div className=\"catalog-result-item__getit\"><a href={PrimoRecordLink(item)}>Find online</a></div>;\n}\n\nfunction physicalAvailability(item) {\n    return <AvailabilityContainer item={item} />;\n}\n\nfunction coverImage(item) {\n    const altText = `Catalog record for ${item.title}`;\n    return <div className=\"media-right\">\n        <a href={PrimoRecordLink(item)} aria-hidden=\"true\">\n            <img src={item.coverImages[0].url} alt={altText} className=\"cover-image\"/>\n        </a>\n    </div>\n}\n\nexport default BookResult;","import React from 'react';\n\nfunction SeeAllLink({total, found, term, url}) {\n    if(!total) {\n        total = 0;\n    }\n\n    if (total <= found) {\n        return <div className=\"see-all-link--empty\"/>;\n    }\n\n    if (!term) {\n        return <div className=\"see-all-link--badge\">\n            <a href={url}>See all</a>\n        </div>;\n    }\n\n    return (\n        <div className=\"see-all-link\">\n            <span className=\"see-all-link__prefix\">></span> <a href={url}>See all {total.toLocaleString()} {term}</a>\n        </div>\n    );\n}\n\nexport default SeeAllLink;","import React from 'react';\n\n/**\n * A single result class box\n *\n * @param client object GraphQL client\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @param searchUrl string URL to link to search.\n * @return {*}\n * @constructor\n */\nfunction ResultsBox({heading, searchUrl, seeAll, children}) {\n    return (\n        <div className=\"bento-results-box\" aria-live=\"polite\">\n            <div className=\"bento-results-box__header-row\">\n                <h2>{heading}</h2>\n                {seeAll}\n            </div>\n            {children}\n        </div>\n    )\n}\n\nexport default ResultsBox;","import React from 'react';\nimport ResultsBox from './ResultsBox';\n\n/**\n * Contents of result box when waiting for results\n *\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @return {*}\n * @constructor\n */\nfunction LoadingBox({heading}) {\n    return (\n        <ResultsBox heading={heading}>\n            <div className='bento-results-box__loading-notice'>Loading...</div>\n        </ResultsBox>\n    )\n}\n\nexport default LoadingBox;","import React from 'react';\nimport ResultsBox from './ResultsBox';\n\n/**\n * Contents of result box after error\n *\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @return {*}\n * @constructor\n */\nfunction ErrorBox({heading}) {\n    return (\n        <ResultsBox heading={heading}>\n            <div className=\"bento-results-box__error-notice\">There was an error performing this search.</div>\n        </ResultsBox>\n    )\n}\n\nexport default ErrorBox;","import React from 'react';\nimport ResultsBox from './ResultsBox';\n\n/**\n * Contents of result after no result search\n *\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @return {*}\n * @constructor\n */\nfunction NoResultsBox({heading}) {\n    return (\n        <ResultsBox heading={heading}>\n            <div className=\"bento-results-box__no-results\">There are no results matching your search.</div>\n        </ResultsBox>\n    )\n\n}\n\nexport default NoResultsBox;","import React from 'react';\n\n/**\n * List of result from search\n *\n * @param docs array Docs array from GraphQL result\n * @param classPrefix string Prefix for element class\n * @param renderResult function Function that maps a GraphQL doc to a single JSX result entry\n * @return {*}\n * @constructor\n */\nfunction ResultList({docs, classPrefix, renderResult}) {\n    return <div className={`${classPrefix}-results-box`}>\n        <ol className={`${classPrefix}-results-list`}>\n            {docs.map(renderResult)}\n        </ol>\n    </div>\n}\n\nexport default ResultList;","import React from 'react';\nimport {useQuery} from \"@apollo/react-hooks\";\nimport SeeAllLink from \"./SeeAllLink\";\nimport LoadingBox from \"./LoadingBox\";\nimport ErrorBox from \"./ErrorBox\";\nimport NoResultsBox from \"./NoResultsBox\";\nimport ResultList from \"./ResultList\";\nimport ResultsBox from \"./ResultsBox\";\n\n/**\n * Fetch data from GraphQL and render result box\n *\n * @param client object GraphQL client\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @param term string Term for result (e.g. \"articles\")\n * @param classPrefix string Prefix for element class\n * @param searchUrl string URL to link to search.\n * @param renderResult function Function that maps a GraphQL doc to a single JSX result entry\n * @param query object The GraphQL query to execute.\n * @return {*}\n * @constructor\n */\nfunction ResultsBoxContainer({client, heading, term, classPrefix, renderResult, query}) {\n\n    // Perform GraphQL query\n    const {loading, error, data} = useQuery(query.gql, {client});\n\n    if (loading) {\n        return <LoadingBox heading={heading}/>\n    }\n\n    if (error) {\n        return <ErrorBox heading={heading}/>\n    }\n\n    if (data[query.object].total === 0) {\n        return <NoResultsBox heading={heading}/>\n    }\n\n    // Success! Build response.\n    const docs = data[query.object].docs ? data[query.object].docs : data[query.object].results;\n    const searchUrl = data[query.object].searchUrl;\n    const seeAll = <SeeAllLink term={term} total={data[query.object].total} found={docs.length} url={searchUrl}/>;\n    heading = <a href={searchUrl}>{heading}</a>;\n\n    return (\n        <ResultsBox heading={heading} seeAll={seeAll} searchUrl={searchUrl}>\n            <ResultList classPrefix={classPrefix} docs={docs} renderResult={renderResult}/>\n        </ResultsBox>\n    )\n}\n\nexport default ResultsBoxContainer;","/**\n * Cleans user input for submitting to GraphQL\n *\n * @param string string The search string\n * @return {void | string | never}\n */\nfunction cleanGraphQLInput(string) {\n    return string.replace(/\"/g, '\\\\\"').replace('/\\\\/g', '\\\\');\n}\n\nexport {cleanGraphQLInput};","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\n/**\n * Books and more query\n */\nclass BooksAndMoreQuery {\n    gql;\n    object = 'searchCatalog';\n\n    constructor(searchString) {\n        this.gql = forBooksAndMore(searchString);\n    }\n}\n\nfunction forBooksAndMore(searchString) {\n    return gql`\n{\n  searchCatalog( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    docs {\n      id,\n      title,\n      date,\n      type,\n      creator,\n      contributors,\n      coverImages { \n        url\n      },\n      available,\n      isPhysical,\n      isElectronic,\n      screenCap,\n      mms,\n      holdings {\n        ilsId,\n        libraryCode,\n        locationDisplay,\n        locationCode,\n        availabilityStatus,\n        callNumber,\n        items {\n          availability,\n          locationCode,\n          location,\n          libraryDisplay,\n          library,\n          callNumber\n          }\n        }\n    },   \n    searchUrl,\n    didUMean,\n    total\n  }\n}`;\n}\n\nexport {BooksAndMoreQuery};","import React from 'react';\nimport BookResult from \"./BookResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {BooksAndMoreQuery} from \"./BooksAndMoreQuery\";\n\n/**\n * Book results box\n *\n * @param searchString string The search string from user input\n * @param client object GraphQL client\n * @return {*}\n * @constructor\n */\nfunction BookResults({searchString, client}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Books & more'}\n            classPrefix={'books'}\n            term={'items'}\n            query={new BooksAndMoreQuery(searchString)}\n            renderResult={doc => <BookResult item={doc} key={`book-${doc.id}`}/>}\n        />\n    );\n}\n\nexport default BookResults;","import React from 'react';\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\n\nfunction ArticleResult({article}) {\n    return <li className=\"article-result-item media\">\n        <div className=\"media-body\">\n            <h3 className=\"article-result-item__media-heading media-heading\">\n                <a href={PrimoRecordLink(article)} className=\"article-result-item__title\">\n                    {article.title}\n                </a>\n            </h3>\n\n            {article.date}\n\n            <div className=\"article-result-item__creator\">{article.creator}</div>\n            <div className=\"article-result-item__publisher\">\n                {formatPartOf(article.isPartOf, article.journalTitle)}\n            </div>\n\n        </div>\n    </li>;\n}\n\n// @TODO Replace\nfunction formatPartOf(part_of, journal_title) {\n    part_of = part_of.length > 0 ? part_of[0] : '';\n\n    const parts = part_of.split(journal_title);\n\n    if (!journal_title || parts.length !== 2) {\n        return <span>{part_of}</span>\n    }\n\n    return <span className=\"article-result-item__journal-title\">\n            {parts[0]}<cite>{journal_title}</cite>{parts[1]}\n        </span>\n}\n\nexport default ArticleResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\nclass ArticlesQuery {\n    gql;\n    object = 'searchArticles'\n\n    constructor(searchString) {\n        this.gql = forArticles(searchString);\n    }\n}\n\n/**\n * Get query for articles\n *\n * @param searchString string\n */\nfunction forArticles(searchString) {\n    return gql`\n{\n  searchArticles( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    docs {\n      id,\n      title,\n      date,\n      type,\n      creator,\n      contributors,\n      coverImages {\n        url\n      },\n      isPartOf,\n      journalTitle\n    },   \n    searchUrl,\n    didUMean,\n    total\n  }\n}`;\n}\n\nexport {ArticlesQuery};","import React from 'react';\nimport ArticleResult from \"./ArticleResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {ArticlesQuery} from \"./ArticlesQuery\";\n\n/**\n * Article results box\n *\n * @param searchString string The search string from user input\n * @param client object GraphQL client\n * @return {*}\n * @constructor\n */\nfunction ArticleResults({searchString, client}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Articles'}\n            classPrefix={'articles'}\n            term={'articles'}\n            query={new ArticlesQuery(searchString)}\n            renderResult={doc => <ArticleResult article={doc} key={`article-${doc.id}`}/>}\n        />\n    );\n}\n\nexport default ArticleResults;","import React from 'react';\n\nfunction FaqResult({result}) {\n    return <li><a href={result.url}>{result.question}</a></li>;\n}\n\nexport default FaqResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\nclass FAQQuery {\n    gql;\n    object = 'searchFAQ';\n\n    constructor(searchString) {\n        this.gql = forFAQ(searchString);\n    }\n}\n\n/**\n * Get query for FAQ results\n *\n * @param searchString\n */\nfunction forFAQ(searchString) {\n    return gql`\n{\n  searchFAQ( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    results {\n      id,\n      question,\n      url\n    },   \n    searchUrl,\n    total\n  }\n}`\n}\n\nexport {FAQQuery};","import React from 'react';\nimport FaqResult from \"./FaqResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {FAQQuery} from \"./FAQQuery\";\n\n/**\n * FAQ results box\n *\n * @param searchString string The search string from user input\n * @param client object GraphQL client\n * @return {*}\n * @constructor\n */\nfunction FaqResults({searchString, client}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'FAQ'}\n            classPrefix={'faq'}\n            term={'results'}\n            query={new FAQQuery(searchString)}\n            renderResult={doc => <FaqResult result={doc} key={`answer-${doc.id}`}/>}\n        />\n    );\n}\n\nexport default FaqResults;","import React from 'react';\n\nfunction LibrarianResult({librarian}) {\n    const url = `http://libguides.bc.edu/prf.php?account_id=${librarian.id}`;\n    const img_url = `//${librarian.image}`;\n    const alt = `picture of ${librarian.name}`;\n    const display_subjects = librarian.subjects.sort().join(', ');\n\n\n    return <li className=\"media\">\n        <div className=\"media-left\">\n            <a href={url}><img src={img_url} alt={alt}/></a>\n        </div>\n\n        <div className=\"media-body\">\n            <h3 className=\"media-heading\">\n                <a href={url}>{librarian.name}</a>\n            </h3>\n            <p className=\"guide-description\">{display_subjects}</p>\n        </div>\n    </li>;\n}\n\nexport default LibrarianResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\n/**\n * Books and more query\n */\nclass LibrariansQuery {\n    gql;\n    object = 'recommendLibrarian';\n\n    constructor(searchString) {\n        this.gql = forLibrarians(searchString);\n    }\n}\n\nfunction forLibrarians(searchString) {\n    return gql`\n{\n  recommendLibrarian( keyword: \"${cleanGraphQLInput(searchString)}\") {\n    total\n    searchUrl\n    docs {\n      id\n      name\n      email\n      subjects\n      image\n    }\n  }\n}`;\n}\n\nexport {LibrariansQuery};","import React from 'react';\nimport LibrarianResult from \"./LibrarianResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {LibrariansQuery} from \"./LibrariansQuery\";\n\nfunction LibrarianResults({searchString, client}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Librarians'}\n            classPrefix={'librarian'}\n            term={'librarians'}\n            query={new LibrariansQuery(searchString)}\n            renderResult={doc => <LibrarianResult librarian={doc} key={`librarian-${doc.id}`}/>}\n        />\n    );\n}\n\nexport default LibrarianResults;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\nclass VideosQuery {\n    gql;\n    object = 'searchVideo'\n\n    constructor(searchString) {\n        this.gql = forVideos(searchString);\n    }}\n\n/**\n * Get query for videos\n *\n * This query is the same as for Books & More.\n *\n * @param searchString string\n * @return {*}\n */\nfunction forVideos(searchString) {\n    return gql`\n{\n  searchVideo( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    docs {\n      id,\n      title,\n      date,\n      type,\n      creator,\n      contributors,\n      coverImages { \n        url\n      },\n      available,\n      isPhysical,\n      isElectronic,\n      screenCap,\n      format,\n      mms,\n      holdings {\n        ilsId,\n        libraryCode,\n        locationDisplay,\n        locationCode,\n        availabilityStatus,\n        callNumber,\n        items {\n          availability,\n          locationCode,\n          location,\n          libraryDisplay,\n          library,\n          callNumber\n          }\n        }\n    },   \n    searchUrl,\n    didUMean,\n    total\n  }\n}`;\n}\n\nexport {VideosQuery};","import React from 'react';\nimport VideoResult from \"./VideoResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {VideosQuery} from \"./VideosQuery\";\n\n/**\n * Video results box\n *\n * @param searchString string The search string from user input\n * @param client object GraphQL client\n * @return {*}\n * @constructor\n */\nfunction VideoResults({searchString, client}) {\n    return <ResultsBoxContainer\n        client={client}\n        heading={'Videos'}\n        classPrefix={'videos'}\n        term={'videos'}\n        query={new VideosQuery(searchString)}\n        renderResult={doc => <VideoResult item={doc} key={`video-${doc.id}`}/>}\n    />\n}\n\nexport default VideoResults;","import React from 'react';\n\nfunction WebsiteResult({hit}) {\n    return <li className=\"website-hit\">\n        <h3 className=\"website-hit__title\">\n            <a href={hit.url}>{hit.title}</a>\n        </h3>\n        in <a href={hit.guideUrl} className=\"website-hit__guide-title\">{hit.guideTitle}</a>\n        <div className=\"website-hit__highlight\" dangerouslySetInnerHTML={getHighlight(hit)}/>\n    </li>\n}\n\nfunction getHighlight(hit) {\n    return {__html: hit.highlight[1]};\n}\n\nexport default WebsiteResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\n/**\n * Books and more query\n */\nclass WebsiteQuery {\n    gql;\n    object = 'searchWebsite';\n\n    constructor(searchString) {\n        this.gql = forWebsite(searchString);\n    }\n}\n\nfunction forWebsite(searchString) {\n    return gql`\n{\n  searchWebsite( keyword: \"${cleanGraphQLInput(searchString)}\") {\n    total\n    searchUrl\n    docs {\n      title\n      guideTitle\n      updated\n      url\n      guideUrl\n      fullTitle\n      highlight\n    }\n  }\n}`;\n}\n\nexport {WebsiteQuery};","import React from 'react';\nimport WebsiteResult from \"./WebsiteResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {WebsiteQuery} from \"./WebsiteQuery\";\n\nfunction WebsiteResults({searchString, client}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Our Website'}\n            classPrefix={'website'}\n            term={'results'}\n            query={new WebsiteQuery(searchString)}\n            renderResult={doc => <WebsiteResult hit={doc} key={`hit-${doc.url}`}/>}\n        />\n    );\n}\n\nexport default WebsiteResults;","import React from \"react\";\n\nfunction BestBetResult({bestBet}) {\n    const title = bestBet.link ? (\n        <a href={bestBet.link}>{bestBet.title}</a>\n    ) : (<span>{bestBet.title}</span>);\n\n\n    return (\n        <div className='best-bet-row'>\n            <h2 className='best-bet-row__heading'>Top result</h2>\n            <div className='best-bet-result'>\n                <h3 className='best-bet-result__title'>{title}</h3>\n                <div dangerouslySetInnerHTML={{__html: bestBet.displayText}}/>\n            </div>\n        </div>\n    )\n}\n\nexport default BestBetResult;","import React from 'react';\nimport BestBetResult from \"./BestBetResult\";\nimport gql from \"graphql-tag\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\nfunction BestBetLookup({searchString, client}) {\n    const {loading, error, data} = useQuery(forBestBets(searchString), {client});\n\n    if (loading || error || !data.bestBet) {\n        return null;\n    }\n\n    return <BestBetResult bestBet={data.bestBet}/>;\n}\n\n/**\n * Get query for Best Bets\n *\n * @param searchString\n */\nfunction forBestBets(searchString) {\n    return gql`\n{\n  bestBet( keyword: \"${cleanGraphQLInput(searchString)}\") {\n      title\n      displayText\n      link\n  }\n}`\n}\n\nexport default BestBetLookup;","import React from 'react';\n\nfunction SkipToLink({target, label}) {\n\n    const handleClick = (event) => {\n        if (target.current) {\n            target.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start'\n            });\n        }\n    };\n\n    return <div><span className=\"link-to-results__skip_to_link\" onClick={handleClick}>{label}</span></div>;\n\n}\n\nexport default SkipToLink;","import React from 'react';\nimport SkipToLink from \"./SkipToLink\";\n\nfunction SkipToLinkBar({booksDiv, articlesDiv, faqDiv, librariansDiv, videoDiv, websiteDiv}) {\n    return (\n        <div className=\"row\">\n            <nav className=\"link-to-results col-md-8\">\n                <div className=\"link-to-results__skip-to\">Skip to:</div>\n                <SkipToLink target={booksDiv} label=\"Books & more\"/>\n                <SkipToLink target={articlesDiv} label=\"Articles\"/>\n                <SkipToLink target={faqDiv} label=\"FAQ\"/>\n                <SkipToLink target={librariansDiv} label=\"Librarians\"/>\n                <SkipToLink target={videoDiv} label=\"Video\"/>\n                <SkipToLink target={websiteDiv} label=\"Website\"/>\n            </nav>\n            <div className=\"not-finding col-md-4\">Not finding what you\n                need? <a href=\"https://libguides.bc.edu/ask-a-librarian\">Ask\n                    us!</a></div>\n        </div>\n    );\n}\n\nexport {SkipToLinkBar};","import React, {useRef} from 'react';\nimport BookResults from \"./slots/books/BookResults\";\nimport ArticleResults from \"./slots/articles/ArticleResults\";\nimport FaqResults from \"./slots/faq/FaqResults\";\nimport LibrarianResults from \"./slots/librarians/LibrarianResults\";\nimport VideoResults from \"./slots/video/VideoResults\";\nimport WebsiteResults from \"./slots/website/WebsiteResults\";\nimport BestBetLookup from \"./slots/bestbets/BestBetLookup\";\nimport {SkipToLinkBar} from \"./SkipToLinkBar\";\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({uri: process.env.REACT_APP_GRAPHQL_ENDPOINT});\n\nfunction SearchResults({searchString}) {\n\n    // Get references to search result boxes for linking in the skip to bar.\n    const refList = {\n        booksDiv: useRef(null),\n        articlesDiv: useRef(null),\n        faqDiv: useRef(null),\n        librariansDiv: useRef(null),\n        videoDiv: useRef(null),\n        websiteDiv: useRef(null),\n    };\n\n    const resultBoxParams = {searchString, client};\n\n    return (\n        <div>\n            <SkipToLinkBar {...refList} />\n\n            <div className=\"bento-results\">\n                <BestBetLookup {...resultBoxParams}/>\n\n                <div className=\"results-row-1 row\">\n                    <div className=\"col-md-5 col-sm-12\" ref={refList.booksDiv}>\n                        <BookResults {...resultBoxParams} />\n                    </div>\n                    <div className=\"col-md-5 col-md-offset-1 col-sm-12\" ref={refList.articlesDiv}>\n                        <ArticleResults {...resultBoxParams}/>\n                    </div>\n                </div>\n\n                <div className=\"results-row-2 row\" ref={refList.faqDiv}>\n                    <div className=\"col-md-7\">\n                        <FaqResults {...resultBoxParams}/>\n                    </div>\n                    <div className=\"col-md-4 col-md-offset-1\" ref={refList.librariansDiv}>\n                        <LibrarianResults  {...resultBoxParams}/>\n                    </div>\n                </div>\n\n                <div className=\"results-row-3 row\" ref={refList.videoDiv}>\n                    <div className=\"col-md-12\">\n                        <VideoResults {...resultBoxParams}/>\n                    </div>\n                </div>\n\n                <div className=\"results-row-4 row\" ref={refList.websiteDiv}>\n                    <div className=\"col-md-12\">\n                        <WebsiteResults {...resultBoxParams}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchResults;","import React from 'react';\n\nfunction BlankSearchScreen() {\n    return (\n        <div className=\"blank-search-screen\">\n            <div className=\"blank-search-screen__explanation\">\n                Search for just about anything in or about the Libraries.\n            </div>\n        </div>\n    );\n}\n\nexport default BlankSearchScreen;","import React from 'react';\nimport SearchResults from \"./SearchResults\";\nimport BlankSearchScreen from \"./slots/BlankSearchScreen\";\n\nfunction App({searchBox, searchString}) {\n    return (\n        <div className=\"bento-results-page\">\n            <h1 className=\"sr-only sr-only-focusable\" id=\"main-heading\">Search the library</h1>\n            {searchBox}\n            {searchString ? <SearchResults searchString={searchString}/> : <BlankSearchScreen/>}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport Autosuggest from \"react-autosuggest\";\n\n/**\n * Render the search box and the  list of typeahead suggestions\n *\n * @param searchBoxId\n * @param suggestions\n * @param fetchSuggestions\n * @param clearSuggestions\n * @param onSuggestionSelected\n * @param inputProps\n * @return {*}\n * @constructor\n */\nfunction SearchBox({searchBoxId, suggestions, fetchSuggestions, clearSuggestions, onSuggestionSelected, inputProps}) {\n\n    // A display a single suggestion.\n    const renderSuggestion = suggestion => (\n        <div className=\"search-suggestion\">\n            {suggestion.value}\n        </div>\n    );\n\n    return (\n        <form method=\"get\" action=\"..\" className=\"bento-search-box\">\n\n            <label htmlFor={searchBoxId} className=\"bcbento-search-box__input-label sr-only\">\n                Enter a search term please\n            </label>\n            <Autosuggest suggestions={suggestions}\n                         onSuggestionsFetchRequested={fetchSuggestions}\n                         onSuggestionsClearRequested={clearSuggestions}\n                         renderSuggestion={renderSuggestion}\n                         onSuggestionSelected={onSuggestionSelected}\n                         inputProps={inputProps}\n            />\n        </form>\n    );\n}\n\nexport default SearchBox;","import React, {useState} from 'react';\nimport SearchBox from './SearchBox';\n\n// Minimum length of input string before typeahead is activated.\nconst minTypeaheadLength = 3;\n\n// Id of the search box <input> element.\nconst searchBoxId = 'bento-search-box__search-input';\n\n// Called when a suggestion in the typeahead box is selected. Redirects page to\n// new search with the selected value as keyword.\nfunction onSuggestionSelected(event, {suggestion, suggestionValue, suggestionIndex, sectionIndex, method}) {\n    const url = window.location.protocol + '//' + window.location.host + window.location.pathname;\n    window.location.href = `${url}?any=${suggestionValue}`;\n}\n\n/**\n * Controls search box and typeahead\n *\n * @param handleTyping\n * @param searchString\n * @param onSubmit\n * @return {*}\n * @constructor\n */\nfunction SearchBoxContainer({handleTyping, searchString, onSubmit}) {\n\n    // suggestions is an array of suggestions, each with the format:\n    //     {\n    //         value: 'Text of suggestion',\n    //         score: 15\n    //     }\n    // Where value is the text of the suggestion and score is the score\n    // assigned by ElasticSearch\n    const [suggestions, setSuggestions] = useState([]);\n\n    // value is the text value of the search box <input> element.\n    const [value, setValue] = useState(searchString);\n\n    // Called after each keypress in the typeahead box.\n    const onTyping = (event, {newValue, method}) => {\n        if (method === 'enter') {\n            onSubmit();\n        } else {\n            setValue(newValue);\n            handleTyping(newValue);\n        }\n    };\n\n    // Called to fetch suggestions from server.\n    async function fetchSuggestions({value, reason}) {\n\n        // Don't fetch suggestions if there isn't enough input or if the input action was not\n        // actually typing.\n        if (value.length < minTypeaheadLength || reason === 'input-focused') {\n            return;\n        }\n\n        // Fetch.\n        const url = `https://library.bc.edu/search-services/typeahead?any=${value}`;\n        let json = [];\n\n        try {\n            const response = await fetch(url);\n            json = await response.json();\n        } catch (err) {\n\n            // Don't fail on error, just don't return a suggestions.\n            json = []\n        }\n        setSuggestions(json);\n    }\n\n    // Called to empty suggestions (e.g. after pressing escape).\n    function clearSuggestions() {\n        setSuggestions([]);\n    }\n\n    // Search box should be auto-focused iff there are no results to display.\n    const autoFocus = !value;\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n        placeholder: 'Search for books, articles, journals, databases',\n        value,\n        onChange: onTyping,\n        name: 'any',\n        id: searchBoxId,\n        autoFocus\n    };\n\n    const props = {\n        searchBoxId,\n        suggestions,\n        fetchSuggestions,\n        clearSuggestions,\n        onSuggestionSelected,\n        inputProps\n    };\n\n    return <SearchBox {...props} />\n}\n\nexport default SearchBoxContainer;","import React, {useState} from 'react';\nimport App from \"./App\";\nimport SearchBoxContainer from './searchbox/SearchBoxContainer';\nimport 'airbnb-js-shims';\n\nfunction AppContainer() {\n    // On page load, grab search string from URL 'any' GET parameter.\n    const initialSearchString = getUrlParameter('any');\n    setPageTitle(initialSearchString);\n\n    // searchString is the text to be searched for.\n    const [searchString, setSearchString] = useState(initialSearchString);\n\n    // inputText is the text currently in the search box.\n    const [inputText, setInputText] = useState('');\n    const handleTyping = value => setInputText(value);\n\n    // Handle page submits without reloads. Currently all submits have reloads, but this\n    // will eventually be enabled for efficiency.\n    const handleSubmit = () => {\n        setSearchString(inputText);\n        setPageTitle(searchString);\n    };\n\n    const searchBox = <SearchBoxContainer searchString={searchString}\n                                          handleTyping={handleTyping}\n                                          handleSubmit={handleSubmit}/>;\n\n    return <App searchBox={searchBox} searchString={searchString}/>;\n}\n\nfunction setPageTitle(searchString) {\n    document.title = searchString ? `Search - ${searchString}` : 'Search';\n}\n\n/**\n * Return a GET parameter from a URL query string\n *\n * @param name\n * @return {string}\n */\nfunction getUrlParameter(name) {\n    name = name.replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n    const regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n    const results = regex.exec(window.location.search);\n    return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n}\n\nexport default AppContainer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './AppContainer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}