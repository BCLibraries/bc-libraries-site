{"version":3,"sources":["FixBrokenImage.jsx","slots/PrimoRecordLink.js","slots/video/OnlineVideo.jsx","slots/availability/NotAvailableMessage.js","slots/availability/CheckHoldingsMessage.jsx","slots/availability/Availability.jsx","slots/availability/AvailabilityContainer.jsx","slots/video/PhysicalVideo.jsx","slots/video/VideoResult.jsx","slots/books/BookResult.jsx","slots/SeeAllLink.jsx","slots/ResultsBox.js","slots/LoadingBox.js","slots/ErrorBox.js","slots/NoResultsBox.js","slots/ResultList.js","slots/ResultsBoxContainer.jsx","slots/cleanGraphQLInput.js","slots/books/BooksAndMoreQuery.js","slots/books/BookResults.jsx","slots/articles/ArticleResult.jsx","slots/articles/ArticlesQuery.js","slots/articles/ArticleResults.jsx","slots/faq/FaqResult.jsx","slots/faq/FAQQuery.js","slots/faq/FaqResults.jsx","slots/librarians/LibrarianResult.jsx","slots/librarians/LibrariansQuery.js","slots/librarians/LibrarianResults.jsx","slots/video/VideosQuery.js","slots/video/VideoResults.jsx","slots/website/WebsiteResult.jsx","slots/website/WebsiteQuery.js","slots/website/WebsiteResults.jsx","slots/bestbets/BestBetResult.js","slots/bestbets/BestBetLookup.js","SkipToLink.jsx","SkipToLinkBar.jsx","SearchResults.jsx","slots/BlankSearchScreen.jsx","App.jsx","searchbox/SearchBox.jsx","searchbox/SearchBoxContainer.jsx","AppContainer.jsx","serviceWorker.js","index.js"],"names":["FixBrokenImage","fallbackImage","imgClass","event","target","onerror","src","className","PrimoRecordLink","item","isPci","tab","scope","context","concat","id","blankScreen","OnlineVideo","_ref","video","screen","screenCap","screenClass","watchLink","mms","recordLink","react_default","a","createElement","href","alt","title","onError","date","creator","contributors","creatorName","NotAvailableMessage","checkHoldingsMessage","library","location","Availability","firstHolding","inOtherLibraries","link","libraryDisplay","callNumber","locationValues","ONL","weight","Stacks","1st Floor Microfilm","TML","BAPST","BURNS","ERC","SWK","LAW","GEO","RES_SHARE","DEV","INT","getLocationScore","libraryCode","sortLibraries","holdingA","holdingB","locationCode","AvailabilityContainer","holdings","holding","availableItems","allItems","i","length","items","filter","availability","Array","prototype","push","apply","sort","buildHoldings","availabilityStatus","CheckHoldingsMessage","locationDisplay","availability_Availability","availability_NotAvailableMessage","defaultDVDIcon","dvdClass","defaultIcon","iconClass","coverClass","coverImages","onImageLoad","naturalHeight","PhysicalVideo","format","includes","cover","String","url","getCover","altText","aria-hidden","onLoad","availability_AvailabilityContainer","VideoResult","inCatalogResult","isElectronic","video_OnlineVideo","video_PhysicalVideo","resultClass","BookResult","type","video_VideoResult","publisher","getItLink","isPhysical","physicalAvailability","coverImage","SeeAllLink","total","found","term","toLocaleString","ResultsBox","heading","seeAll","searchUrl","children","aria-live","LoadingBox","slots_ResultsBox","ErrorBox","NoResultsBox","ResultList","docs","classPrefix","renderResult","map","ResultsBoxContainer","client","query","_useQuery","useQuery","gql","loading","error","data","slots_LoadingBox","slots_ErrorBox","object","slots_NoResultsBox","results","slots_SeeAllLink","slots_ResultList","err","cleanGraphQLInput","string","replace","BooksAndMoreQuery","searchString","Object","classCallCheck","this","_templateObject","forBooksAndMore","BookResults","slots_ResultsBoxContainer","doc","books_BookResult","key","ArticleResult","article","rel","part_of","journal_title","parts","split","formatPartOf","isPartOf","journalTitle","ArticlesQuery","ArticlesQuery_templateObject","forArticles","ArticleResults","articles_ArticleResult","FaqResult","result","question","FAQQuery","FAQQuery_templateObject","forFAQ","FaqResults","faq_FaqResult","LibrarianResult","librarian","img_url","image","name","display_subjects","subjects","join","LibrariansQuery","LibrariansQuery_templateObject","forLibrarians","LibrarianResults","librarians_LibrarianResult","VideosQuery","VideosQuery_templateObject","forVideos","VideoResults","getHighlight","hit","__html","highlight","WebsiteResult","guideUrl","guideTitle","dangerouslySetInnerHTML","WebsiteQuery","WebsiteQuery_templateObject","forWebsite","WebsiteResults","website_WebsiteResult","BestBetResult","bestBet","displayText","BestBetLookup","BestBetLookup_templateObject","forBestBets","bestbets_BestBetResult","SkipToLink","label","onClick","current","scrollIntoView","behavior","block","SkipToLinkBar","booksDiv","articlesDiv","faqDiv","librariansDiv","videoDiv","websiteDiv","src_SkipToLink","ApolloClient","uri","process","SearchResults","refList","useRef","resultBoxParams","bestbets_BestBetLookup","ref","books_BookResults","articles_ArticleResults","faq_FaqResults","librarians_LibrarianResults","video_VideoResults","website_WebsiteResults","BlankSearchScreen","App","searchBox","src_SearchResults","slots_BlankSearchScreen","SearchBox","searchBoxId","suggestions","fetchSuggestions","clearSuggestions","onSuggestionSelected","inputProps","method","action","htmlFor","dist_default","getSuggestionValue","suggestion","value","onSuggestionsFetchRequested","onSuggestionsClearRequested","renderSuggestion","minTypeaheadLength","suggestionValue","suggestionIndex","sectionIndex","window","protocol","host","pathname","SearchBoxContainer","_ref2","handleTyping","onSubmit","_useState","useState","_useState2","slicedToArray","setSuggestions","_useState3","_useState4","setValue","_fetchSuggestions","asyncToGenerator","regenerator_default","mark","_callee","_ref4","reason","json","response","wrap","_context","prev","next","abrupt","fetch","sent","t0","stop","arguments","props","_x","placeholder","onChange","_ref3","newValue","autoFocus","searchbox_SearchBox","setPageTitle","document","AppContainer","initialSearchString","RegExp","exec","search","decodeURIComponent","getUrlParameter","setSearchString","inputText","setInputText","searchbox_SearchBoxContainer","handleSubmit","src_App","Boolean","hostname","match","ReactDOM","render","src_AppContainer","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b536c3cd.chunk.js","sourcesContent":["function FixBrokenImage(fallbackImage, imgClass) {\n    return function (event) {\n        event.target.onerror = null;\n        event.target.src = fallbackImage;\n        if (imgClass) {\n            event.target.className = imgClass;\n        }\n    }\n}\n\nexport default FixBrokenImage;","/**\n * Return a link to a record in Primo\n *\n * @param item\n * @return {string}\n * @constructor\n */\nfunction PrimoRecordLink(item, isPci) {\n    if (!isPci) {\n        isPci = false;\n    }\n\n    const tab = isPci ? 'pci_only' : 'bcl_only';\n    const scope = isPci ? 'pci' : 'bcl';\n    const context = isPci ? 'PC' : 'L';\n\n    return `https://bc-primo.hosted.exlibrisgroup.com/primo-explore/fulldisplay?docid=${item.id}&context=${context}&tab=${tab}&search_scope=${scope}&vid=bclib_new&lang=en_US`;\n}\n\nexport {PrimoRecordLink};","import React from 'react';\nimport FixBrokenImage from \"../../FixBrokenImage\";\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\n\nconst blankScreen = 'https://library.bc.edu/images/blank-screen.svg';\n\nfunction OnlineVideo({video}) {\n    const screen = video.screenCap ? video.screenCap : blankScreen;\n    const screenClass = video.screenCap ? 'online-video-thumb__screenshot' : 'online-video-thumb__blank_screen';\n    const watchLink = `https://mlib.bc.edu/reserves-api/items/${video.mms}`;\n    const recordLink = PrimoRecordLink(video);\n\n    return <div className=\"online-video\">\n        <a href={watchLink}>\n            <div className=\"online_video__thumb\">\n                <img src={screen} alt={`Watch ${video.title} online`} onError={FixBrokenImage(blankScreen)} className={screenClass}/>\n            </div>\n        </a>\n\n        <h3 className=\"online-video__media-heading media-heading\">\n            <a href={recordLink} className=\"online-video__title\">{video.title}</a>\n        </h3>\n\n        {video.date}\n\n        <div className=\"online-video__creator\">{creatorName(video)}</div>\n\n        <div className=\"online-video__watch-link\"><a href={watchLink}>Watch online</a></div>\n    </div>\n}\n\nfunction creatorName(video) {\n    if (video.creator) {\n        return video.creator;\n    }\n\n    if (video.contributors[0]) {\n        return video.contributors[0];\n    }\n\n    return '';\n}\n\nexport default OnlineVideo;","import {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport React from \"react\";\n\n/**\n * Message to display when the item is not available\n *\n * @param item\n * @return {*}\n * @constructor\n */\nfunction NotAvailableMessage({item}) {\n    return (\n        <div className=\"item-info item-info--unavailable\">\n            Not available. <a href={PrimoRecordLink(item)}>Check for more options</a>.\n        </div>\n    )\n}\n\nexport default NotAvailableMessage;\n","import {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport React from \"react\";\n\nfunction checkHoldingsMessage({item, library, location}) {\n    return (\n        <div className=\"item-info item-info--check-holdings\">\n            <span className=\"item-info__instructions\">\n                <a href={PrimoRecordLink(item, false)}>Check \"Find in Library\"</a>\n            </span>\n            <span className=\"item-info__library\">{library}</span>\n            <span className=\"item-info__location\">{location}</span>.\n        </div>\n    );\n}\n\nexport default checkHoldingsMessage;","import React from \"react\";\n\n/**\n * Message to display for available item\n *\n * @param firstHolding\n * @param inOtherLibraries\n * @return {*}\n * @constructor\n */\nfunction Availability({firstHolding, inOtherLibraries}) {\n    return (\n        <ul className='available-items-list'>\n            <li className={`item-info item-info--available`}>\n                <a href={firstHolding.link}>\n                    <span className=\"item-info__library\">Find in {firstHolding.libraryDisplay}</span>\n                    <span className=\"item-info__location\">{firstHolding.location}</span>\n                    <span className=\"item-info__callno\">({firstHolding.callNumber})</span>\n                    <span className=\"item-info__other-libraries\">{inOtherLibraries && ' and other libraries'}</span>\n                </a>\n            </li>\n        </ul>\n    );\n\n}\n\nexport default Availability;","import React from 'react';\nimport NotAvailableMessage from \"./NotAvailableMessage\";\nimport CheckHoldingsMessage from \"./CheckHoldingsMessage\";\nimport Availability from \"./Availability\";\n\n/**\n * Display an item's available holdings\n *\n * @param item\n * @return {*}\n * @constructor\n */\nfunction AvailabilityContainer({item}) {\n\n    // Build holdings list and display first holding.\n    const holdings = buildHoldings(item);\n    const firstHolding = holdings.length > 0 ? holdings[0] : null;\n\n    if (item.holdings[0] && item.holdings[0].availabilityStatus === 'check_holdings') {\n        return <CheckHoldingsMessage item={item} library={item.holdings[0].libraryCode} location={item.holdings[0].locationDisplay}/>\n    } else if (firstHolding) {\n        return <Availability firstHolding={firstHolding} inOtherLibraries={holdings.length > 1}/>;\n    } else {\n        return <NotAvailableMessage item={item}/>;\n    }\n}\n\n/**\n * Stores library and location weights for sorting holdings.\n *\n * Entries are formatted like:\n *\n *     'library code': {\n *         weight: 0,\n *         'location 1 display': -1,\n *         'location 2 display': 2\n *     }\n *\n *  Where:\n *\n *     * library code: The three-letter library code used in Alma (e.g. 'ONL', 'ERC')\n *     * weight: How much to weight the library if no location match is found\n *     * location # display: The display string value for a location (e.g. '2 hour reserves'); the value\n *                           is the weighting for items in this location\n *\n *  Items with lower weights will sort higher, so to emphasize a library or location give it a negative\n *  value.\n */\nconst locationValues = {\n    'ONL': {\n        weight: -1,\n        'Stacks': -3,\n        '1st Floor Microfilm': 1\n    },\n    'TML': {\n        weight: 0\n    },\n    'BAPST': {\n        weight: 0\n    },\n    'BURNS': {\n        weight: 0\n    },\n    'ERC': {\n        weight: 0\n    },\n    'SWK': {\n        weight: 0\n    },\n    'LAW': {\n        weight: 0\n    },\n    'GEO': {\n        weight: 1\n    },\n    'RES_SHARE': {\n        weight: 2\n    },\n    'DEV': {\n        weight: 2\n    },\n    'INT': {\n        weight: 1\n    }\n};\n\n/**\n * Lookup desirability score by library and location\n */\nfunction getLocationScore(libraryCode, location) {\n    const library = locationValues[libraryCode];\n    return library[location] ? library[location] + library.weight : library.weight;\n}\n\n/**\n * Rank two holdings by most desirable library and location\n */\nfunction sortLibraries(holdingA, holdingB) {\n    return getLocationScore(holdingA.library, holdingA.locationCode) - getLocationScore(holdingB.library, holdingB.locationCode)\n}\n\n/**\n * Build a list of available holdings sorted by most desirable library and location\n */\nfunction buildHoldings(item) {\n    const allItems = [];\n    let holding, availableItems;\n\n    for (let i = 0; i < item.holdings.length; i++) {\n        holding = item.holdings[i];\n        availableItems = holding.items.filter(item => item.availability === 'available');\n        Array.prototype.push.apply(allItems, availableItems);\n    }\n\n    return allItems.sort(sortLibraries);\n}\n\nexport default AvailabilityContainer;","import React from 'react';\nimport FixBrokenImage from \"../../FixBrokenImage\";\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport AvailabilityContainer from \"../availability/AvailabilityContainer\";\n\nconst defaultVHSIcon = 'https://library.bc.edu/images/video-tape.svg';\nconst defaultDVDIcon = 'https://library.bc.edu/images/mono-dvd-mount.svg';\n\nconst vhsClass = 'physical-video__vhs-cover',\n    dvdClass = 'physical-video__dvd-cover';\n\nlet defaultIcon = defaultVHSIcon;\nlet iconClass = vhsClass;\n\nfunction PhysicalVideo({video}) {\n    if (video.format.includes('disc')) {\n        defaultIcon = defaultDVDIcon;\n        iconClass = dvdClass;\n    }\n\n    const cover = getCover(video);\n\n    const altText = `Catalog record for ${video.title}`;\n\n    const recordLink = PrimoRecordLink(video, true);\n\n    return <div className=\"physical-video\">\n        <a href={recordLink} aria-hidden=\"true\">\n            <img src={cover}\n                 onLoad={onImageLoad}\n                 onError={FixBrokenImage(defaultIcon, `OPER physical-video__default_cover ${iconClass}`)}\n                 alt={altText}\n                 className={coverClass(video)}/>\n        </a>\n\n        <h3 className=\"physical-video__media-heading media-heading\">\n            <a href={recordLink} className=\"physical-video__title\">\n                {video.title}\n            </a>\n        </h3>\n\n        {video.date}\n\n        <div className=\"physical-video__creator\">{creatorName(video)}</div>\n\n        {video.format}\n\n        <AvailabilityContainer item={video}/>\n\n    </div>\n}\n\nfunction coverClass(video) {\n    return (video.coverImages.length > 0 && video.coverImages[0]) ? 'physical-video__box_cover' : `OPER HERE NOW physical-video__default_cover  ${iconClass}`;\n}\n\nfunction getCover(video) {\n    if (video.coverImages.length > 0 && video.coverImages[0]) {\n        return String(video.coverImages[0].url);\n    }\n\n    return defaultIcon;\n}\n\nfunction creatorName(video) {\n    if (video.creator) {\n        return video.creator;\n    }\n\n    if (video.contributors[0]) {\n        return video.contributors[0];\n    }\n\n    return '';\n}\n\nfunction onImageLoad(event) {\n    if (event.target.naturalHeight === 1) {\n        event.target.className = `physical-video__default_cover ${iconClass}`;\n        event.target.src = defaultIcon;\n    }\n}\n\nexport default PhysicalVideo;","import React from 'react';\nimport OnlineVideo from './OnlineVideo';\nimport PhysicalVideo from './PhysicalVideo';\n\nfunction VideoResult({item, inCatalogResult}) {\n    const video = item.isElectronic ? <OnlineVideo video={item}/> : <PhysicalVideo video={item}/>;\n    const resultClass = inCatalogResult ? 'catalog-result-item' : 'catalog-result-item col-md-4';\n\n    return <li className={resultClass}>\n        {video}\n    </li>\n}\n\nexport default VideoResult;","import React from 'react';\nimport VideoResult from \"../video/VideoResult\";\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport AvailabilityContainer from \"../availability/AvailabilityContainer\";\n\nfunction BookResult({item}) {\n    if (item.isElectronic && item.type === 'Video') {\n        return <VideoResult item={item} inCatalogResult={true}/>;\n    }\n\n    const link = PrimoRecordLink(item);\n\n    return <li className=\"catalog-result-item media\">\n\n        <div className=\"media-body\">\n            <h3 className=\"catalog-result-item__media-heading media-heading\">\n                <a href={link} className=\"catalog-result-item__title\">\n                    {item.title}\n                </a>\n            </h3>\n\n            <div className=\"catalog-result-item__creator\">{creatorName(item)}</div>\n\n            <div className=\"catalog-result-item__publisher\">\n                {item.publisher} {item.date}\n            </div>\n\n            <div className=\"catalog-result-item__type\">{item.type}</div>\n\n            {item.isElectronic && getItLink(item)}\n\n            {item.isPhysical && physicalAvailability(item)}\n\n        </div>\n\n        {item.coverImages.length > 1 && coverImage(item)}\n    </li>\n}\n\nfunction creatorName(item) {\n    if (item.creator) {\n        return item.creator;\n    }\n\n    if (item.contributors[0]) {\n        return item.contributors[0];\n    }\n\n    return '';\n}\n\nfunction getItLink(item) {\n    return <div className=\"catalog-result-item__getit\"><a href={PrimoRecordLink(item)}>Find online</a></div>;\n}\n\nfunction physicalAvailability(item) {\n    return <AvailabilityContainer item={item} />;\n}\n\nfunction coverImage(item) {\n    const altText = `Catalog record for ${item.title}`;\n    return <div className=\"media-right\">\n        <a href={PrimoRecordLink(item)} aria-hidden=\"true\">\n            <img src={item.coverImages[0].url} alt={altText} className=\"cover-image\"/>\n        </a>\n    </div>\n}\n\nexport default BookResult;","import React from 'react';\n\nfunction SeeAllLink({total, found, term, url}) {\n    if(!total) {\n        total = 0;\n    }\n\n    if (total <= found) {\n        return <div className=\"see-all-link--empty\"/>;\n    }\n\n    if (!term) {\n        return <div className=\"see-all-link--badge\">\n            <a href={url}>See all</a>\n        </div>;\n    }\n\n    return (\n        <div className=\"see-all-link\">\n            <span className=\"see-all-link__prefix\">></span> <a href={url}>See all {total.toLocaleString()} {term}</a>\n        </div>\n    );\n}\n\nexport default SeeAllLink;","import React from 'react';\n\n/**\n * A single result class box\n *\n * @param client object GraphQL client\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @param searchUrl string URL to link to search.\n * @return {*}\n * @constructor\n */\nfunction ResultsBox({heading, searchUrl, seeAll, children}) {\n    return (\n        <div className=\"bento-results-box\" aria-live=\"polite\">\n            <div className=\"bento-results-box__header-row\">\n                <h2>{heading}</h2>\n                {seeAll}\n            </div>\n            {children}\n        </div>\n    )\n}\n\nexport default ResultsBox;","import React from 'react';\nimport ResultsBox from './ResultsBox';\n\n/**\n * Contents of result box when waiting for results\n *\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @return {*}\n * @constructor\n */\nfunction LoadingBox({heading}) {\n    return (\n        <ResultsBox heading={heading}>\n            <div className='bento-results-box__loading-notice'>Loading...</div>\n        </ResultsBox>\n    )\n}\n\nexport default LoadingBox;","import React from 'react';\nimport ResultsBox from './ResultsBox';\n\n/**\n * Contents of result box after error\n *\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @return {*}\n * @constructor\n */\nfunction ErrorBox({heading}) {\n    return (\n        <ResultsBox heading={heading}>\n            <div className=\"bento-results-box__error-notice\">There was an error performing this search.</div>\n        </ResultsBox>\n    )\n}\n\nexport default ErrorBox;","import React from 'react';\nimport ResultsBox from './ResultsBox';\n\n/**\n * Contents of result after no result search\n *\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @return {*}\n * @constructor\n */\nfunction NoResultsBox({heading}) {\n    return (\n        <ResultsBox heading={heading}>\n            <div className=\"bento-results-box__no-results\">There are no results matching your search.</div>\n        </ResultsBox>\n    )\n\n}\n\nexport default NoResultsBox;","import React from 'react';\n\n/**\n * List of result from search\n *\n * @param docs array Docs array from GraphQL result\n * @param classPrefix string Prefix for element class\n * @param renderResult function Function that maps a GraphQL doc to a single JSX result entry\n * @return {*}\n * @constructor\n */\nfunction ResultList({docs, classPrefix, renderResult}) {\n    return <div className={`${classPrefix}-results-box`}>\n        <ol className={`${classPrefix}-results-list`}>\n            {docs.map(renderResult)}\n        </ol>\n    </div>\n}\n\nexport default ResultList;","import React from 'react';\nimport {useQuery} from \"@apollo/react-hooks\";\nimport SeeAllLink from \"./SeeAllLink\";\nimport LoadingBox from \"./LoadingBox\";\nimport ErrorBox from \"./ErrorBox\";\nimport NoResultsBox from \"./NoResultsBox\";\nimport ResultList from \"./ResultList\";\nimport ResultsBox from \"./ResultsBox\";\n\n/**\n * Fetch data from GraphQL and render result box\n *\n * @param client object GraphQL client\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @param term string Term for result (e.g. \"articles\")\n * @param classPrefix string Prefix for element class\n * @param searchUrl string URL to link to search.\n * @param renderResult function Function that maps a GraphQL doc to a single JSX result entry\n * @param query object The GraphQL query to execute.\n * @return {*}\n * @constructor\n */\nfunction ResultsBoxContainer({client, heading, term, classPrefix, renderResult, query}) {\n\n    try {\n        // Perform GraphQL query\n        const {loading, error, data} = useQuery(query.gql, {client});\n\n        if (loading) {\n            return <LoadingBox heading={heading}/>\n        }\n\n        if (error) {\n            return <ErrorBox heading={heading}/>\n        }\n\n        if (data[query.object].total === 0) {\n            return <NoResultsBox heading={heading}/>\n        }\n\n        // Success! Build response.\n        const docs = data[query.object].docs ? data[query.object].docs : data[query.object].results;\n        const searchUrl = data[query.object].searchUrl;\n        const seeAll = <SeeAllLink term={term} total={data[query.object].total} found={docs.length} url={searchUrl}/>;\n        heading = <a href={searchUrl}>{heading}</a>;\n\n        return (\n            <ResultsBox heading={heading} seeAll={seeAll} searchUrl={searchUrl}>\n                <ResultList classPrefix={classPrefix} docs={docs} renderResult={renderResult}/>\n            </ResultsBox>\n        )\n    } catch (err) {\n        return <ErrorBox heading={heading}/>\n    }\n}\n\nexport default ResultsBoxContainer;","/**\n * Cleans user input for submitting to GraphQL\n *\n * @param string string The search string\n * @return {void | string | never}\n */\nfunction cleanGraphQLInput(string) {\n    return string.replace(/\"/g, '\\\\\"').replace('/\\\\/g', '\\\\');\n}\n\nexport {cleanGraphQLInput};","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\n/**\n * Books and more query\n */\nclass BooksAndMoreQuery {\n    gql;\n    object = 'searchCatalog';\n\n    constructor(searchString) {\n        this.gql = forBooksAndMore(searchString);\n    }\n}\n\nfunction forBooksAndMore(searchString) {\n    return gql`\n{\n  searchCatalog( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    docs {\n      id,\n      title,\n      date,\n      type,\n      creator,\n      contributors,\n      coverImages { \n        url\n      },\n      available,\n      isPhysical,\n      isElectronic,\n      screenCap,\n      mms,\n      holdings {\n        ilsId,\n        libraryCode,\n        locationDisplay,\n        locationCode,\n        availabilityStatus,\n        callNumber,\n        items {\n          availability,\n          locationCode,\n          location,\n          libraryDisplay,\n          library,\n          callNumber\n          }\n        }\n    },   \n    searchUrl,\n    didUMean,\n    total\n  }\n}`;\n}\n\nexport {BooksAndMoreQuery};","import React from 'react';\nimport BookResult from \"./BookResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {BooksAndMoreQuery} from \"./BooksAndMoreQuery\";\n\n/**\n * Book results box\n *\n * @param searchString string The search string from user input\n * @param client object GraphQL client\n * @return {*}\n * @constructor\n */\nfunction BookResults({searchString, client}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Books & more'}\n            classPrefix={'books'}\n            term={'items'}\n            query={new BooksAndMoreQuery(searchString)}\n            renderResult={doc => <BookResult item={doc} key={`book-${doc.id}`}/>}\n        />\n    );\n}\n\nexport default BookResults;","import React from 'react';\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\n\nfunction ArticleResult({article}) {\n    return <li className=\"article-result-item media\">\n        <div className=\"media-body\">\n            <h3 className=\"article-result-item__media-heading media-heading\">\n                <a href={PrimoRecordLink(article, true)} className=\"article-result-item__title\" target=\"_blank\" rel=\"noreferrer noopener\">\n                    {article.title}\n                </a>\n            </h3>\n\n            {article.date}\n\n            <div className=\"article-result-item__creator\">{article.creator}</div>\n            <div className=\"article-result-item__publisher\">\n                {formatPartOf(article.isPartOf, article.journalTitle)}\n            </div>\n\n        </div>\n    </li>;\n}\n\n// @TODO Replace\nfunction formatPartOf(part_of, journal_title) {\n    part_of = part_of.length > 0 ? part_of[0] : '';\n\n    const parts = part_of.split(journal_title);\n\n    if (!journal_title || parts.length !== 2) {\n        return <span>{part_of}</span>\n    }\n\n    return <span className=\"article-result-item__journal-title\">\n            {parts[0]}<cite>{journal_title}</cite>{parts[1]}\n        </span>\n}\n\nexport default ArticleResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\nclass ArticlesQuery {\n    gql;\n    object = 'searchArticles'\n\n    constructor(searchString) {\n        this.gql = forArticles(searchString);\n    }\n}\n\n/**\n * Get query for articles\n *\n * @param searchString string\n */\nfunction forArticles(searchString) {\n    return gql`\n{\n  searchArticles( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    docs {\n      id,\n      title,\n      date,\n      type,\n      creator,\n      contributors,\n      coverImages {\n        url\n      },\n      isPartOf,\n      journalTitle\n    },   \n    searchUrl,\n    didUMean,\n    total\n  }\n}`;\n}\n\nexport {ArticlesQuery};","import React from 'react';\nimport ArticleResult from \"./ArticleResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {ArticlesQuery} from \"./ArticlesQuery\";\n\n/**\n * Article results box\n *\n * @param searchString string The search string from user input\n * @param client object GraphQL client\n * @return {*}\n * @constructor\n */\nfunction ArticleResults({searchString, client}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Articles'}\n            classPrefix={'articles'}\n            term={'articles'}\n            query={new ArticlesQuery(searchString)}\n            renderResult={doc => <ArticleResult article={doc} key={`article-${doc.id}`}/>}\n        />\n    );\n}\n\nexport default ArticleResults;","import React from 'react';\n\nfunction FaqResult({result}) {\n    return <li><a href={result.url}>{result.question}</a></li>;\n}\n\nexport default FaqResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\nclass FAQQuery {\n    gql;\n    object = 'searchFAQ';\n\n    constructor(searchString) {\n        this.gql = forFAQ(searchString);\n    }\n}\n\n/**\n * Get query for FAQ results\n *\n * @param searchString\n */\nfunction forFAQ(searchString) {\n    return gql`\n{\n  searchFAQ( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    results {\n      id,\n      question,\n      url\n    },   \n    searchUrl,\n    total\n  }\n}`\n}\n\nexport {FAQQuery};","import React from 'react';\nimport FaqResult from \"./FaqResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {FAQQuery} from \"./FAQQuery\";\n\n/**\n * FAQ results box\n *\n * @param searchString string The search string from user input\n * @param client object GraphQL client\n * @return {*}\n * @constructor\n */\nfunction FaqResults({searchString, client}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'FAQ'}\n            classPrefix={'faq'}\n            term={'results'}\n            query={new FAQQuery(searchString)}\n            renderResult={doc => <FaqResult result={doc} key={`answer-${doc.id}`}/>}\n        />\n    );\n}\n\nexport default FaqResults;","import React from 'react';\n\nfunction LibrarianResult({librarian}) {\n    const url = `http://libguides.bc.edu/prf.php?account_id=${librarian.id}`;\n    const img_url = `//${librarian.image}`;\n    const alt = `picture of ${librarian.name}`;\n    const display_subjects = librarian.subjects.sort().join(', ');\n\n\n    return <li className=\"media\">\n        <div className=\"media-left\">\n            <a href={url}><img src={img_url} alt={alt}/></a>\n        </div>\n\n        <div className=\"media-body\">\n            <h3 className=\"media-heading\">\n                <a href={url}>{librarian.name}</a>\n            </h3>\n            <p className=\"guide-description\">{display_subjects}</p>\n        </div>\n    </li>;\n}\n\nexport default LibrarianResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\n/**\n * Books and more query\n */\nclass LibrariansQuery {\n    gql;\n    object = 'recommendLibrarian';\n\n    constructor(searchString) {\n        this.gql = forLibrarians(searchString);\n    }\n}\n\nfunction forLibrarians(searchString) {\n    return gql`\n{\n  recommendLibrarian( keyword: \"${cleanGraphQLInput(searchString)}\") {\n    total\n    searchUrl\n    docs {\n      id\n      name\n      email\n      subjects\n      image\n    }\n  }\n}`;\n}\n\nexport {LibrariansQuery};","import React from 'react';\nimport LibrarianResult from \"./LibrarianResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {LibrariansQuery} from \"./LibrariansQuery\";\n\nfunction LibrarianResults({searchString, client}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Librarians'}\n            classPrefix={'librarian'}\n            term={'librarians'}\n            query={new LibrariansQuery(searchString)}\n            renderResult={doc => <LibrarianResult librarian={doc} key={`librarian-${doc.id}`}/>}\n        />\n    );\n}\n\nexport default LibrarianResults;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\nclass VideosQuery {\n    gql;\n    object = 'searchVideo'\n\n    constructor(searchString) {\n        this.gql = forVideos(searchString);\n    }}\n\n/**\n * Get query for videos\n *\n * This query is the same as for Books & More.\n *\n * @param searchString string\n * @return {*}\n */\nfunction forVideos(searchString) {\n    return gql`\n{\n  searchVideo( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    docs {\n      id,\n      title,\n      date,\n      type,\n      creator,\n      contributors,\n      coverImages { \n        url\n      },\n      available,\n      isPhysical,\n      isElectronic,\n      screenCap,\n      format,\n      mms,\n      holdings {\n        ilsId,\n        libraryCode,\n        locationDisplay,\n        locationCode,\n        availabilityStatus,\n        callNumber,\n        items {\n          availability,\n          locationCode,\n          location,\n          libraryDisplay,\n          library,\n          callNumber\n          }\n        }\n    },   \n    searchUrl,\n    didUMean,\n    total\n  }\n}`;\n}\n\nexport {VideosQuery};","import React from 'react';\nimport VideoResult from \"./VideoResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {VideosQuery} from \"./VideosQuery\";\n\n/**\n * Video results box\n *\n * @param searchString string The search string from user input\n * @param client object GraphQL client\n * @return {*}\n * @constructor\n */\nfunction VideoResults({searchString, client}) {\n    return <ResultsBoxContainer\n        client={client}\n        heading={'Videos'}\n        classPrefix={'videos'}\n        term={'videos'}\n        query={new VideosQuery(searchString)}\n        renderResult={doc => <VideoResult item={doc} key={`video-${doc.id}`}/>}\n    />\n}\n\nexport default VideoResults;","import React from 'react';\n\nfunction WebsiteResult({hit}) {\n    return <li className=\"website-hit\">\n        <h3 className=\"website-hit__title\">\n            <a href={hit.url}>{hit.title}</a>\n        </h3>\n        in <a href={hit.guideUrl} className=\"website-hit__guide-title\">{hit.guideTitle}</a>\n        <div className=\"website-hit__highlight\" dangerouslySetInnerHTML={getHighlight(hit)}/>\n    </li>\n}\n\nfunction getHighlight(hit) {\n    return {__html: hit.highlight[1]};\n}\n\nexport default WebsiteResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\n/**\n * Books and more query\n */\nclass WebsiteQuery {\n    gql;\n    object = 'searchWebsite';\n\n    constructor(searchString) {\n        this.gql = forWebsite(searchString);\n    }\n}\n\nfunction forWebsite(searchString) {\n    return gql`\n{\n  searchWebsite( keyword: \"${cleanGraphQLInput(searchString)}\") {\n    total\n    searchUrl\n    docs {\n      title\n      guideTitle\n      updated\n      url\n      guideUrl\n      fullTitle\n      highlight\n    }\n  }\n}`;\n}\n\nexport {WebsiteQuery};","import React from 'react';\nimport WebsiteResult from \"./WebsiteResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {WebsiteQuery} from \"./WebsiteQuery\";\n\nfunction WebsiteResults({searchString, client}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Our Website'}\n            classPrefix={'website'}\n            term={'results'}\n            query={new WebsiteQuery(searchString)}\n            renderResult={doc => <WebsiteResult hit={doc} key={`hit-${doc.url}`}/>}\n        />\n    );\n}\n\nexport default WebsiteResults;","import React from \"react\";\n\nfunction BestBetResult({bestBet}) {\n    const title = bestBet.link ? (\n        <a href={bestBet.link}>{bestBet.title}</a>\n    ) : (<span>{bestBet.title}</span>);\n\n\n    return (\n        <div className='best-bet-row'>\n            <h2 className='best-bet-row__heading'>Top result</h2>\n            <div className='best-bet-result'>\n                <h3 className='best-bet-result__title'>{title}</h3>\n                <div dangerouslySetInnerHTML={{__html: bestBet.displayText}}/>\n            </div>\n        </div>\n    )\n}\n\nexport default BestBetResult;","import React from 'react';\nimport BestBetResult from \"./BestBetResult\";\nimport gql from \"graphql-tag\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\nfunction BestBetLookup({searchString, client}) {\n    const {loading, error, data} = useQuery(forBestBets(searchString), {client});\n\n    if (loading || error || !data.bestBet) {\n        return null;\n    }\n\n    return <BestBetResult bestBet={data.bestBet}/>;\n}\n\n/**\n * Get query for Best Bets\n *\n * @param searchString\n */\nfunction forBestBets(searchString) {\n    return gql`\n{\n  bestBet( keyword: \"${cleanGraphQLInput(searchString)}\") {\n      title\n      displayText\n      link\n  }\n}`\n}\n\nexport default BestBetLookup;","import React from 'react';\n\nfunction SkipToLink({target, label}) {\n\n    const handleClick = (event) => {\n        if (target.current) {\n            target.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start'\n            });\n        }\n    };\n\n    return <div><span className=\"link-to-results__skip_to_link\" onClick={handleClick}>{label}</span></div>;\n\n}\n\nexport default SkipToLink;","import React from 'react';\nimport SkipToLink from \"./SkipToLink\";\n\nfunction SkipToLinkBar({booksDiv, articlesDiv, faqDiv, librariansDiv, videoDiv, websiteDiv}) {\n    return (\n        <div className=\"row\">\n            <nav className=\"link-to-results col-md-8\">\n                <div className=\"link-to-results__skip-to\">Skip to:</div>\n                <SkipToLink target={booksDiv} label=\"Books & more\"/>\n                <SkipToLink target={articlesDiv} label=\"Articles\"/>\n                <SkipToLink target={faqDiv} label=\"FAQ\"/>\n                <SkipToLink target={librariansDiv} label=\"Librarians\"/>\n                <SkipToLink target={videoDiv} label=\"Video\"/>\n                <SkipToLink target={websiteDiv} label=\"Website\"/>\n            </nav>\n            <div className=\"not-finding col-md-4\">Not finding what you\n                need? <a href=\"https://libguides.bc.edu/ask-a-librarian\">Ask\n                    us!</a></div>\n        </div>\n    );\n}\n\nexport {SkipToLinkBar};","import React, {useRef} from 'react';\nimport BookResults from \"./slots/books/BookResults\";\nimport ArticleResults from \"./slots/articles/ArticleResults\";\nimport FaqResults from \"./slots/faq/FaqResults\";\nimport LibrarianResults from \"./slots/librarians/LibrarianResults\";\nimport VideoResults from \"./slots/video/VideoResults\";\nimport WebsiteResults from \"./slots/website/WebsiteResults\";\nimport BestBetLookup from \"./slots/bestbets/BestBetLookup\";\nimport {SkipToLinkBar} from \"./SkipToLinkBar\";\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({uri: process.env.REACT_APP_GRAPHQL_ENDPOINT});\n\nfunction SearchResults({searchString}) {\n\n    // Get references to search result boxes for linking in the skip to bar.\n    const refList = {\n        booksDiv: useRef(null),\n        articlesDiv: useRef(null),\n        faqDiv: useRef(null),\n        librariansDiv: useRef(null),\n        videoDiv: useRef(null),\n        websiteDiv: useRef(null),\n    };\n\n    const resultBoxParams = {searchString, client};\n\n    return (\n        <div>\n            <SkipToLinkBar {...refList} />\n\n            <div className=\"bento-results\">\n                <BestBetLookup {...resultBoxParams}/>\n\n                <div className=\"results-row-1 row\">\n                    <div className=\"col-md-5 col-sm-12\" ref={refList.booksDiv}>\n                        <BookResults {...resultBoxParams} />\n                    </div>\n                    <div className=\"col-md-5 col-md-offset-1 col-sm-12\" ref={refList.articlesDiv}>\n                        <ArticleResults {...resultBoxParams}/>\n                    </div>\n                </div>\n\n                <div className=\"results-row-2 row\" ref={refList.faqDiv}>\n                    <div className=\"col-md-7\">\n                        <FaqResults {...resultBoxParams}/>\n                    </div>\n                    <div className=\"col-md-4 col-md-offset-1\" ref={refList.librariansDiv}>\n                        <LibrarianResults  {...resultBoxParams}/>\n                    </div>\n                </div>\n\n                <div className=\"results-row-3 row\" ref={refList.videoDiv}>\n                    <div className=\"col-md-12\">\n                        <VideoResults {...resultBoxParams}/>\n                    </div>\n                </div>\n\n                <div className=\"results-row-4 row\" ref={refList.websiteDiv}>\n                    <div className=\"col-md-12\">\n                        <WebsiteResults {...resultBoxParams}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchResults;","import React from 'react';\n\nfunction BlankSearchScreen() {\n    return (\n        <div className=\"blank-search-screen\">\n            <div className=\"blank-search-screen__explanation\">\n                Search for just about anything in or about the Libraries.\n            </div>\n        </div>\n    );\n}\n\nexport default BlankSearchScreen;","import React from 'react';\nimport SearchResults from \"./SearchResults\";\nimport BlankSearchScreen from \"./slots/BlankSearchScreen\";\n\nfunction App({searchBox, searchString}) {\n    return (\n        <div className=\"bento-results-page\">\n            <h1 className=\"sr-only sr-only-focusable\" id=\"main-heading\">Search the library</h1>\n            {searchBox}\n            {searchString ? <SearchResults searchString={searchString}/> : <BlankSearchScreen/>}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport Autosuggest from \"react-autosuggest\";\n\n/**\n * Render the search box and the  list of typeahead suggestions\n *\n * @param searchBoxId\n * @param suggestions\n * @param fetchSuggestions\n * @param clearSuggestions\n * @param onSuggestionSelected\n * @param inputProps\n * @return {*}\n * @constructor\n */\nfunction SearchBox({searchBoxId, suggestions, fetchSuggestions, clearSuggestions, onSuggestionSelected, inputProps}) {\n\n    // A display a single suggestion.\n    const renderSuggestion = suggestion => (\n        <div className=\"search-suggestion\">\n            {suggestion.value}\n        </div>\n    );\n\n    return (\n        <form method=\"get\" action=\"/search\" className=\"bento-search-box\">\n\n            <label htmlFor={searchBoxId} className=\"bcbento-search-box__input-label sr-only\">\n                Enter a search term please\n            </label>\n            <Autosuggest suggestions={suggestions}\n                         getSuggestionValue={suggestion => suggestion.value}\n                         onSuggestionsFetchRequested={fetchSuggestions}\n                         onSuggestionsClearRequested={clearSuggestions}\n                         renderSuggestion={renderSuggestion}\n                         onSuggestionSelected={onSuggestionSelected}\n                         inputProps={inputProps}\n            />\n        </form>\n    );\n}\n\nexport default SearchBox;","import React, {useState} from 'react';\nimport SearchBox from './SearchBox';\n\n// Minimum length of input string before typeahead is activated.\nconst minTypeaheadLength = 3;\n\n// Id of the search box <input> element.\nconst searchBoxId = 'bento-search-box__search-input';\n\n// Called when a suggestion in the typeahead box is selected. Redirects page to\n// new search with the selected value as keyword.\nfunction onSuggestionSelected(event, {suggestion, suggestionValue, suggestionIndex, sectionIndex, method}) {\n    if (suggestionValue) {\n        const url = window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/\\/$/, \"\");\n        window.location.href = `${url}?any=${suggestionValue}`;\n    }\n}\n\n/**\n * Controls search box and typeahead\n *\n * @param handleTyping\n * @param searchString\n * @param onSubmit\n * @return {*}\n * @constructor\n */\nfunction SearchBoxContainer({handleTyping, searchString, onSubmit}) {\n\n    // suggestions is an array of suggestions, each with the format:\n    //     {\n    //         value: 'Text of suggestion',\n    //         score: 15\n    //     }\n    // Where value is the text of the suggestion and score is the score\n    // assigned by ElasticSearch\n    const [suggestions, setSuggestions] = useState([]);\n\n    // value is the text value of the search box <input> element.\n    const [value, setValue] = useState(searchString);\n\n    // Called after each keypress in the typeahead box.\n    const onTyping = (event, {newValue, method}) => {\n        if (method === 'enter') {\n            onSubmit();\n        } else {\n            setValue(newValue);\n            handleTyping(newValue);\n        }\n    };\n\n    // Called to fetch suggestions from server.\n    async function fetchSuggestions({value, reason}) {\n\n        // Don't fetch suggestions if there isn't enough input or if the input action was not\n        // actually typing.\n        if (value.length < minTypeaheadLength || reason === 'input-focused') {\n            return;\n        }\n\n        // Fetch.\n        const url = `https://library.bc.edu/search-services/typeahead?any=${value}`;\n        let json = [];\n\n        try {\n            const response = await fetch(url);\n            json = await response.json();\n        } catch (err) {\n\n            // Don't fail on error, just don't return a suggestions.\n            json = []\n        }\n        setSuggestions(json);\n    }\n\n    // Called to empty suggestions (e.g. after pressing escape).\n    function clearSuggestions() {\n        setSuggestions([]);\n    }\n\n    // Search box should be auto-focused iff there are no results to display.\n    const autoFocus = !value;\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n        placeholder: 'Search for books, articles, journals, databases',\n        value,\n        onChange: onTyping,\n        name: 'any',\n        id: searchBoxId,\n        autoFocus\n    };\n\n    const props = {\n        searchBoxId,\n        suggestions,\n        fetchSuggestions,\n        clearSuggestions,\n        onSuggestionSelected,\n        inputProps\n    };\n\n    return <SearchBox {...props} />\n}\n\nexport default SearchBoxContainer;","import React, {useState} from 'react';\nimport App from \"./App\";\nimport SearchBoxContainer from './searchbox/SearchBoxContainer';\nimport 'airbnb-js-shims';\n\nfunction AppContainer() {\n    // On page load, grab search string from URL 'any' GET parameter.\n    const initialSearchString = getUrlParameter('any');\n    setPageTitle(initialSearchString);\n\n    // searchString is the text to be searched for.\n    const [searchString, setSearchString] = useState(initialSearchString);\n\n    // inputText is the text currently in the search box.\n    const [inputText, setInputText] = useState('');\n    const handleTyping = value => setInputText(value);\n\n    // Handle page submits without reloads. Currently all submits have reloads, but this\n    // will eventually be enabled for efficiency.\n    const handleSubmit = () => {\n        setSearchString(inputText);\n        setPageTitle(searchString);\n    };\n\n    const searchBox = <SearchBoxContainer searchString={searchString}\n                                          handleTyping={handleTyping}\n                                          handleSubmit={handleSubmit}/>;\n\n    return <App searchBox={searchBox} searchString={searchString}/>;\n}\n\nfunction setPageTitle(searchString) {\n    document.title = searchString ? `Search - ${searchString}` : 'Search';\n}\n\n/**\n * Return a GET parameter from a URL query string\n *\n * @param name\n * @return {string}\n */\nfunction getUrlParameter(name) {\n    name = name.replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n    const regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n    const results = regex.exec(window.location.search);\n    return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n}\n\nexport default AppContainer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './AppContainer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}